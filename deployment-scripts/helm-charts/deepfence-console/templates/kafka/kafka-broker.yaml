{{- if not .Values.saas_deployment }}
{{- if (eq "deepfence-kafka-broker:9092" .Values.db.kafka.broker) }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: deepfence-kafka-broker
  labels:
    app: deepfence-console
    {{- include "deepfence-console.labels" . | nindent 4 }}
    name: deepfence-kafka-broker
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: deepfence-kafka-broker
  replicas: {{ .Values.kafkaBroker.replicaCount }}
  selector:
    matchLabels:
      name: deepfence-kafka-broker
  template:
    metadata:
      labels:
        name: deepfence-kafka-broker
        app: deepfence-console
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: name
                      operator: In
                      values:
                        - deepfence-kafka-broker
                topologyKey: kubernetes.io/hostname
      initContainers:
        - name: init
          image: busybox
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:  ["/bin/chmod","-R","777", "/data"]
          volumeMounts:
            - name: deepfence-kafka-data
              mountPath: /data
      containers:
        - name: kafka
          image: "{{ .Values.registry.imagePrefix }}{{ .Values.kafkaBroker.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.kafkaBroker.image.pullPolicy }}
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: REPLICAS
              value: "{{ .Values.kafkaBroker.replicaCount }}"
            - name: SERVICE
              value: deepfence-kafka-broker
            - name: KAFKA_LOG_DIRS
              value: /data/kafka
            - name: STORAGE_UUID
              valueFrom:
                secretKeyRef:
                  name: kafka-secret-{{ include "deepfence-console.fullname" . }}
                  key: kafka_storageUUID
          # livenessProbe:
          #   tcpSocket:
          #     port: 9092
          #   initialDelaySeconds: 180
          #   periodSeconds: 30
          # readinessProbe:
          #   tcpSocket:
          #     port: 9092
          #   initialDelaySeconds: 30
          #   periodSeconds: 30
          resources:
            {{- toYaml .Values.kafkaBroker.resources | nindent 12 }}
          volumeMounts:
          - name: deepfence-kafka-data
            mountPath: /data
      {{- with .Values.kafkaBroker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kafkaBroker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecretName }}
  volumeClaimTemplates:
    - metadata:
        name: deepfence-kafka-data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "{{ .Values.volume.kafkaStorage }}"
        storageClassName: {{ .Values.volume.storageClass }}
---
apiVersion: v1
kind: Service
metadata:
  name: deepfence-kafka-broker
  labels:
    app: deepfence-console
    {{- include "deepfence-console.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    name: deepfence-kafka-broker
  ports:
    - name: '9092'
      port: 9092
      protocol: TCP
      targetPort: 9092
    - name: '9093'
      port: 9093
      protocol: TCP
      targetPort: 9093
---
{{- end }}
{{- end }}